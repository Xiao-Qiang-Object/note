1.	数据建模
1.1.	数据仓库构造方法
自上而下（Bill Inmon）：
1)	从整个企业的业务环境入手，分析其中的概念，应该有什么样的数据，达成概念完整性，bing不从它需要支持哪些应用入手。
2)	一个企业建立唯一的数据中心，就像一个数据的仓库，其中数据是经过整合、经过清洗、去掉脏数据的、标准的、能够提供统一的视图。
自下而上（Raloh Kimbal）：
1)	按照实际的应用需求，加载需要的数据，不需要的数据不必要加载到数据仓库当中。
2)	这种方式建设周期较短，客户能够很快看到结果，适合做项目类数据仓库。
混合法：
	结合自上而下、自下而上两种构造数据仓库的方法，结合企业自身特点，分析业务环境构造数据仓库底层数据基础，再按照实际的应用需求构造数据仓库上层数据。
1.2.	数据仓库模型建设目标示意图
 
1.3.	仓库基础数据层建设的意义
	避免底层业务变动对上层需求影响过大
	屏蔽底层复杂的业务逻辑，尽可能简单、完整的在接口层呈现业务数据
	仓库数据更加丰富
	建设高内聚低耦合的数据组织，使得数据从业务角度可分割，有助于数据和团队的扩展。
1.4.	常见的数据仓库体系结构
 
1.5.	DW模型架构介绍
	DW四层模型是按照大数据湖各个应用层次的需求进行分层细化而来的，每隔层次满足不同的应用。
	分为以下5层：
1)	ODS       数据准备层
2)	DWD      数据明细、汇总层
3)	DWS      数据集市层
4)	ADS       数据应用层

 

1.6.	DW模型架构第一层介绍-ODS层
功能：
	ODS层是数据仓库准备区
	为DWD层提供基础原始数据
	减少对业务系统的影响
建模方式及原则：
	数据保留时间根据实现业务需求而定
	可以分表进行周期存储，存储周期不长
	数据不做清洗转换和业务系统一样
	按主题逻辑划分
	数据模型和粒度和业务系统数据模型保留一致（3NF）
	从业务系统以增量/全量方式抽取加载到ODS
1.7.	DW模型架构第二层介绍-DWD层
功能：
	为DW层提供来源明细数据
	提供业务系统细节数据的长期沉淀
	为未来分析类需求的扩展提供历史数据支持
建模方式及原则：
	数据模型与ODS层一致（3NF
	不做清洗转换处理
	为支持数据重跑可额外增加数据业务日期字段
	用增量ODS层数据和前一天DWD相关表进行merge处理
1.8.	DW模型架构第三层介绍-DWS层
功能：
	为ADS层提供细粒度数据
	DWS是根据DWB层数据按各个维度IO进行粗粒度汇总聚合
	这一层可以是一些宽表，是根据DWS层数据按照各种维度或者多种维度组合把需要查询的一些事实字段进行汇总统计并作为单独的列进行存储
	满足一些特定查询、数据挖掘应用
	应用集市数据存储
建模方式及原则：
	聚合、汇总增加派生事实
	关联其它主题的事实表，DW层可能会跨主题域
	DWS保持高粒度汇总加工数据
	尽量减少数据访问时计算，优化检索
	维度建模、星型模型
	事实拉宽度量预先计算
	分表存储
	数据模型可能采用反范式涉及，合并信息
1.9.	DW模型架构第五层介绍- ADS层
功能：
	ADS层面向用户应用和分析需求，包括前端报表、分析图表、KPI、仪表盘、OLAP、专题等分析，面向最终结果用户
	适合作OLAP、报表模型、如ROLAP、MOLAP
	根据DW层经过聚合汇总统计后的粗粒度事实表
建模方式及原则：
	保持数据量小
	维度建模、星型建模
	各种维度代理键+度量
	增加数据业务日期字段，支持数据重跑
	不分表存储
1.10.	DW五层模型特点
	细化DW建模
对DW中各个主题业务建模进行了细分每个层次具有不同的功能。
保留最细粒度数据
满足了不同维度，不同事实的信息
	满足数据重新生成
不同层次的数据支持数据重新生成
无需备份恢复
解决了由不同故障带来的数据质量问题
消除了重新初始化数据的烦恼
	减少应用对DW的压力
以业务应用驱动为向导建模，通过ST&ADS、DW层提供数据
避免直接操作基础事实表
降低数据获取时间
	快速适应需求变更
适应维度变化
明细基础数据层稳定，适应前端应用层业务需求变更
所有前端应用层模型指建不存在依赖，需求变更对DW整个模型影响范围小
能适应短周期内上线下线需求

